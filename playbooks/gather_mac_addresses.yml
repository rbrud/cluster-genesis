---
# Copyright 2016, IBM US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Clear switch MAC address table
  hosts: localhost
  tasks:
    - name: Clear switch MAC address table switch and write them to the inventory file
      command: "{{ python_executable_local }} {{ scripts_path_local }}/python/clear_port_macs.py /var/oprc/inventory.yml {{ log_level }}"

- name: Bring up all non-ansible comm interfaces on IPv6
  hosts: all
  tasks:
    - name: Bring down all interfaces that are not the ansible communication interface
      command: "ifdown {{ item }}"
      when:
        - "{{ item != 'lo' }}"
        - "{{ inventory_hostname != hostvars[inventory_hostname]['ansible_' + item.replace('-', '_')].get('ipv4', {}).get('address') }}"
      with_items: "{{ ansible_interfaces }}"

    - name: Backup interfaces file
      command: "cp /etc/network/interfaces /etc/network/interfaces.bak"

    - name: 'Write interfaces file for ipv6 auto on all interfaces'
      template:
        src: "{{ playbook_dir }}/templates/ipv6Interface.j2"
        dest: /etc/network/interfaces
        owner: "root"
        group: "root"
        mode: "0644"

    - name: Bring up all interfaces
      command: "ifup {{ item }}"
      when:
        - "{{ item != 'lo' }}"
        - "{{ inventory_hostname != hostvars[inventory_hostname]['ansible_' + item.replace('-', '_')].get('ipv4', {}).get('address') }}"
      with_items: "{{ ansible_interfaces }}"

- name: Get MACs into the inventory file
  hosts: localhost
  tasks:
    - name: Wait for interfaces to communicate with the switch
      pause:
        seconds: 30
    - name: Obtain interface MACs from the switch and write them to the inventory file
      command: "{{ python_executable_local }} {{ scripts_path_local }}/python/set_port_macs.py /var/oprc/inventory.yml {{ log_level }}"
      ignore_errors: yes

- name: Restore system interfaces
  hosts: all
  tasks:
    - name: Bring down all interfaces that are not the ansible communication interface
      command: "ifdown {{ item }}"
      when:
        - "{{ item != 'lo' }}"
        - "{{ inventory_hostname != hostvars[inventory_hostname]['ansible_' + item.replace('-', '_')].get('ipv4', {}).get('address') }}"
      with_items: "{{ ansible_interfaces }}"

    - name: Restore interfaces file
      command: "cp /etc/network/interfaces.bak /etc/network/interfaces"

    - name: Bring up all interfaces
      command: "ifup {{ item }}"
      when:
        - "{{ item != 'lo' }}"
        - "{{ inventory_hostname != hostvars[inventory_hostname]['ansible_' + item.replace('-', '_')].get('ipv4', {}).get('address') }}"
      with_items: "{{ ansible_interfaces }}"
