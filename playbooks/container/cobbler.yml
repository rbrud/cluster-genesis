---
- hosts: localhost
  tasks:

    - name: "Install vim - used for debug."
      apt: name=vim
      become: yes
      become_method: sudo

    - name: "Install aptitude so we can use apt upgrade safe."
      apt: name=aptitude
      become: yes
      become_method: sudo

    - name: "Add apt key for opensuse.org cobbler repository."
      apt_key:
          url: http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/xUbuntu_14.04/Release.key
      become: yes
      become_method: sudo

    - name: "Add opensuse.org cobbler repository."
      apt_repository:
          repo: deb http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/xUbuntu_14.04 /
      become: yes
      become_method: sudo

    - name: "Update apt cache & upgrade packages (safe)."
      apt:
          update_cache: yes
          upgrade: safe
      become: yes
      become_method: sudo

    - name: "Install software packages."
      apt: name={{ item }}
      with_items:
      - cobbler
      - dnsmasq
      - fence-agents
      - wget
      become: yes
      become_method: sudo

    - name: "Create tftp root directory."
      file:
          path: /tftpboot
          state: directory
          mode: 0755
      become: yes
      become_method: sudo

    - name: "Save original /etc/cobbler/dnsmasq.template file."
      copy:
          src: /etc/cobbler/dnsmasq.template
          dest: /etc/cobbler/dnsmasq.template.orig
      become: yes
      become_method: sudo

    - name: "Set IP address range to use for unrecognized DHCP clients."
      replace:
          dest: /etc/cobbler/dnsmasq.template
          regexp: "{{ item.regexp }}"
          replace: "{{ item.replace }}"
      become: yes
      become_method: sudo
      with_items:
      - { regexp: '#domain-needed', replace: 'domain-needed' }
      - { regexp: '192.168.1.5,192.168.1.200',
          replace: '192.168.3.150,192.168.3.200' }

    - name: "Configure dnsmasq to enable TFTP server."
      lineinfile:
          dest: /etc/cobbler/dnsmasq.template
          line: "{{ item }}"
      with_items:
      - enable-tftp
      - tftp-root=/tftpboot
      - user=root
      - interface=docker0
      become: yes
      become_method: sudo

    - name: "Save original /etc/cobbler/modules.conf file."
      copy:
          src: /etc/cobbler/modules.conf
          dest: /etc/cobbler/modules.conf.orig
      become: yes
      become_method: sudo

    - name: "Configure Cobbler to use dnsmasq for DHCP and DNS services."
      replace:
          dest: /etc/cobbler/modules.conf
          regexp: "{{ item.regexp }}"
          replace: "{{ item.line }}"
      with_items:
      - { regexp: 'module = manage_bind', line: 'module = manage_dnsmasq' }
      - { regexp: 'module = manage_isc', line: 'module = manage_dnsmasq' }
      become: yes
      become_method: sudo

    - copy:
          src: /etc/apache2/conf.d/cobbler.conf
          dest: /etc/apache2/conf-available/cobbler.conf 
      become: yes
      become_method: sudo

    - copy:
          src: /etc/apache2/conf.d/cobbler_web.conf
          dest: /etc/apache2/conf-available/cobbler_web.conf
      become: yes
      become_method: sudo

    - command: /usr/sbin/a2enconf cobbler cobbler_web
      become: yes
      become_method: sudo

    - command: /usr/sbin/a2enmod proxy
      become: yes
      become_method: sudo

    - command: /usr/sbin/a2enmod proxy_http
      become: yes
      become_method: sudo

    #SECRET_KEY=$(python -c 'import re;from random import choice; import sys; sys.stdout.write(re.escape("".join([choice("abcdefghijklmnopqrstuvwxyz0123456789^&*(-_=+)") for i in range(100)])))')
    #cp -p /usr/share/cobbler/web/settings.py /usr/share/cobbler/web/settings.py.orig
    #sed -i "s/^SECRET_KEY = .*/SECRET_KEY = '${SECRET_KEY}'/" /usr/share/cobbler/web/settings.py

    - name: "Save original /etc/apache2/conf-enabled/cobbler.conf file."
      copy:
          src: /etc/apache2/conf-enabled/cobbler.conf
          dest: /etc/apache2/conf-enabled/cobbler.conf.orig
      become: yes
      become_method: sudo

    - name: "Save original /etc/apache2/conf-enabled/cobbler_web.conf file."
      copy:
          src: /etc/apache2/conf-enabled/cobbler_web.conf
          dest: /etc/apache2/conf-enabled/cobbler_web.conf.orig
      become: yes
      become_method: sudo

    - name: "Apache2 config"
      lineinfile:
          dest: "{{ item }}"
          regexp: "Order allow,deny"
          state: absent
      with_items:
      - /etc/apache2/conf-enabled/cobbler.conf
      - /etc/apache2/conf-enabled/cobbler_web.conf
      become: yes
      become_method: sudo

    - name: "Apache2 config"
      replace:
          dest: "{{ item }}"
          regexp: "Allow from all"
          replace: "Require all granted"
      with_items:
      - /etc/apache2/conf-enabled/cobbler.conf
      - /etc/apache2/conf-enabled/cobbler_web.conf
      become: yes
      become_method: sudo

    - file:
          path: /var/lib/cobbler/webui_sessions
          owner: www-data
      become: yes
      become_method: sudo

    - name: "Save original /etc/cobbler/settings file."
      copy:
          src: /etc/cobbler/settings
          dest: /etc/cobbler/settings.orig
      become: yes
      become_method: sudo

    - replace:
          dest: /etc/cobbler/settings
          regexp: "{{ item.regexp }}"
          replace: "{{ item.line }}"
      with_items:
    #  - { regexp: '127.0.0.1', line: '192.168.3.24' }
      - { regexp: 'manage_dhcp: 0', line: 'manage_dhcp: 1' }
      - { regexp: 'manage_dns: 0', line: 'manage_dns: 1' }
      - { regexp: 'pxe_just_once: 0', line: 'pxe_just_once: 1' }
      become: yes
      become_method: sudo

    - name: "Save original /var/lib/cobbler/snippets/kickstart_done file."
      copy:
          src: /var/lib/cobbler/snippets/kickstart_done
          dest: /var/lib/cobbler/snippets/kickstart_done.orig
      become: yes
      become_method: sudo
    #### had to modify the snippet template
    #root@sm4:~# sdiff -s /var/lib/cobbler/snippets/kickstart_done.orig /var/lib/cobbler/snippets/kickstart_done
    #            #set nopxe = "\nwget \"http://%s/cblr/svc/op/nopx |             #set nopxe = "\\\nwget \"http://%s/cblr/svc/op/no
    #            #set saveks = "\nwget \"http://%s/cblr/svc/op/ks/ |             #set saveks = "\\\nwget \"http://%s/cblr/svc/op/k
    #            #set runpost = "\nwget \"http://%s/cblr/svc/op/tr |             #set runpost = "\\\nwget \"http://%s/cblr/svc/op/

    - name: "Restart cobblerd service."
      service:
          name: cobblerd
          state: restarted
      become: yes
      become_method: sudo

    - name: "Restart apache2 service."
      service:
          name: apache2
          state: restarted
      become: yes
      become_method: sudo

    - name: "Update boot-loader files."
      command: /usr/bin/cobbler get-loaders
      become: yes
      become_method: sudo

    - name: "Update cobbler list of OS signatures."
      command: /usr/bin/cobbler signature update
      become: yes
      become_method: sudo

    - name: "Run cobbler sync."
      command: /usr/bin/cobbler sync
      become: yes
      become_method: sudo

    - name: "Restart cobblerd service (again)."
      service:
          name: cobblerd
          state: restarted
      become: yes
      become_method: sudo

    - name: "Restart apache2 service (again)."
      service:
          name: apache2
          state: restarted
      become: yes
      become_method: sudo

    - name: "Restart dnsmasq service."
      service:
          name: dnsmasq
          state: restarted
      become: yes
      become_method: sudo

    # Does this make sense in a container context?
    - name: "Set cobblerd service to start on boot."
      service:
          name: cobblerd
          enabled: yes
      become: yes
      become_method: sudo

    #### Copy os *.iso to local dir (e.g.: /home/ubuntu/install_isos/ubuntu/ubuntu-14.04.4-server-amd64.iso)
    #mkdir -p ~/ygg/image; scp ~/ygg/image
    #scp sm0:/home/ubuntu/install_isos/ubuntu/ubuntu-14.04.4-server-amd64.iso .

    #### Mount iso and import (need to be root)
    #mount -t iso9660 -o loop,ro ubuntu-14.04.4-server-amd64.iso /mnt
    #cobbler import --name=ubuntu-14.04.4-server-amd64 --arch=x86_64 --path=/mnt

    #### Create System profiles?
