---
- hosts: localhost
  gather_facts: yes

- name: container/cobbler/cobbler_add_distros.yml
  hosts: deployer
  vars:
    log_level: ""
  tasks:

    - name: "Restore original /etc/cobbler/pxe/pxedefault.template file"
      copy:
        remote_src: True
        src: /etc/cobbler/pxe/pxedefault.template.orig
        dest: /etc/cobbler/pxe/pxedefault.template
      become: yes
      become_method: sudo

    - name: "Copy OS installer images and configs to container"
      copy:
        src: "{{ item }}"
        dest: "{{ project_path }}/os_images/"
        force: no
      with_fileglob:
        - ~/distro_images/*.iso

    - name: "Register list of *.iso files"
      shell: "ls {{ project_path }}/os_images/*.iso | grep -v mini"
      register: iso_files

    - name: "Register list of *.mini.iso files"
      shell: "ls {{ project_path }}/os_images/*.mini.iso"
      register: mini_iso_files

    - name: "Register list of *.cfg files"
      shell: "ls {{ project_path }}/os_images/config/*.cfg"
      register: cfg_files

    - name: "Register list of *.list files"
      shell: "ls {{ project_path }}/os_images/config/*.list"
      register: list_files

    - name: "Mount Disto installer images"
      mount:
        name: "/mnt/{{ item | basename | regex_replace('^(.*).iso$', '\\1') }}"
        src: "{{ item }}"
        fstype: iso9660
        opts: loop,ro
        state: mounted
      with_items:
        - "{{ iso_files.stdout_lines }}"
        - "{{ mini_iso_files.stdout_lines }}"
      become: yes
      become_method: sudo

    - name: "Copy distro images to web repo directory" 
      command: "rsync -a /mnt/{{ item | basename | regex_replace('^(.*).iso$', '\\1') }}/ /var/www/html/{{ item | basename | regex_replace('^(.*).iso$', '\\1') }}/"
      with_items:
        - "{{ iso_files.stdout_lines }}"
      become: yes
      become_method: sudo
 
    - name: "Copy \"mini\" netboot files to web repo directory" 
      command: "rsync -a /mnt/{{ item | basename | regex_replace('^(.*).iso$', '\\1') }}/install/ /var/www/html/{{ item | basename | regex_replace('^(.*).mini.iso$', '\\1') }}/install/netboot/"
      with_items:
        - "{{ mini_iso_files.stdout_lines }}"
      become: yes
      become_method: sudo
    
    - name: "Update preseed configurations with container IP"
      replace:
        dest: "{{ item }}"
        regexp: "0.0.0.0"
        replace: "{{ container_mgmt_ipv4 | ipaddr('address') }}"
      with_items:
        - "{{ cfg_files.stdout_lines }}"
      become: yes
      become_method: sudo

    - name: "Register default user id"
      shell: "grep userid-default {{ config }} | awk '{print $2}'"
      register: userid_default

    - name: "Update preseed configurations with default user id"
      replace:
        dest: "{{ item }}"
        regexp: "defaultuser"
        replace: "{{ userid_default.stdout }}"
      with_items:
        - "{{ cfg_files.stdout_lines }}"
      when: userid_default.stdout != ""
      become: yes
      become_method: sudo

    - name: "Register default password"
      shell: "grep password-default {{ config }} | awk '{print $2}'"
      register: password_default

    - name: "Update preseed configurations with default user password"
      replace:
        dest: "{{ item }}"
        regexp: "passw0rd"
        replace: "{{ password_default.stdout }}"
      with_items:
        - "{{ cfg_files.stdout_lines }}"
      when: password_default.stdout != ""
      become: yes
      become_method: sudo

    - name: "Copy preseed configurations to cobbler kickstart directory"
      copy:
        src: "{{ item }}"
        remote_src: True
        dest: /var/lib/cobbler/kickstarts/
      with_items:
        - "{{ cfg_files.stdout_lines }}"
      become: yes
      become_method: sudo

    - name: "Copy apt source lists to web repo directory" 
      copy:
        src: "{{ item }}"
        remote_src: True
        dest: "/var/www/html/{{ item | basename | regex_replace('^(.*).sources.list$', '\\1') }}/sources.list"
      with_items:
        - "{{ list_files.stdout_lines }}"
      become: yes
      become_method: sudo

    - name: "Unmount distro installer images"
      mount:
        name: "/mnt/{{ item | basename | regex_replace('^(.*).iso$', '\\1') }}"
        src: "{{ item }}"
        fstype: iso9660
        state: unmounted
      with_items:
        - "{{ iso_files.stdout_lines }}"
        - "{{ mini_iso_files.stdout_lines }}"
      become: yes
      become_method: sudo
    
    - name: "Call python \"cobbler_add_distros.py\" script to import distros and create default profiles"
      command: "{{ python_executable }} {{ scripts_path }}/python/cobbler_add_distros.py /var/www/html/{{ item | basename | regex_replace('^(.*)[.]iso$', '\\1') }} {{ item | basename | regex_replace('^(.*)[.]iso$', '\\1') }}  {{ item | basename | regex_replace('^.*-(.*)[.]iso$', '\\1') }} {{ log_level }}"
      with_items:
        - "{{ iso_files.stdout_lines }}"
      become: yes
      become_method: sudo

