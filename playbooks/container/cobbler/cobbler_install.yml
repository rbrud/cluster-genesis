---
# Copyright 2016, IBM US, Inc.

- hosts: localhost
  gather_facts: yes

- name: container/cobbler/cobbler_install.yml
  hosts: installer
  tasks:

    - name: "Install aptitude to enable apt upgrade safe "
      apt: name=aptitude
      become: yes
      become_method: sudo

    - name: "Update apt cache & upgrade packages (safe)"
      apt:
        update_cache: yes
        upgrade: safe
      become: yes
      become_method: sudo

    - name: "Install software packages"
      apt:
        name: "{{ item }}"
      with_items:
        - createrepo
        - apache2
        - mkisofs
        - libapache2-mod-wsgi
        - python-cheetah
        - python-netaddr
        - python-simplejson
        - python-yaml
        - python-pycurl
        - syslinux
        - yum-utils
        - python-django
        - dnsmasq
        - fence-agents
        - wget
        - vim
      become: yes
      become_method: sudo

    - name: "Clone Cobbler github repo"
      git:
        repo: git://github.com/cobbler/cobbler.git
        dest: "/home/{{ user }}/cobbler"
        version: release26

    - name: "Run Cobbler make install"
      command: make install chdir="/home/{{ user }}/cobbler"
      become: yes
      become_method: sudo

    - name: "Create cobbler symlink"
      file:
        src: /usr/local/lib/python2.7/dist-packages/cobbler
        path: /usr/lib/python2.7/dist-packages/cobbler
        state: link
      become: yes
      become_method: sudo

    - name: "Create tftp root directory"
      file:
        path: /tftpboot
        state: directory
        mode: 0755
      become: yes
      become_method: sudo

    - name: "Save original /etc/cobbler/dnsmasq.template file"
      copy:
        remote_src: True
        src: /etc/cobbler/dnsmasq.template
        dest: /etc/cobbler/dnsmasq.template.orig
      become: yes
      become_method: sudo

    - name: "Set IP address range to use for unrecognized DHCP clients"
      replace:
        dest: /etc/cobbler/dnsmasq.template
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      become: yes
      become_method: sudo
      with_items:
        - { regexp: '#domain-needed', replace: 'domain-needed' }
        - { regexp: "192.168.1.5",
            replace: "{{container_mgmt_subnet | ipaddr('150') | ipaddr('address') }}" }
        - { regexp: "192.168.1.200",
            replace: "{{container_mgmt_subnet | ipaddr('200') | ipaddr('address') }}" }

    - name: "Configure dnsmasq to enable TFTP server"
      lineinfile:
        dest: /etc/cobbler/dnsmasq.template
        line: "{{ item }}"
      with_items:
        - enable-tftp
        - tftp-root=/tftpboot
        - user=root
      become: yes
      become_method: sudo

    - name: "Save original /etc/cobbler/modules.conf file"
      copy:
        remote_src: True
        src: /etc/cobbler/modules.conf
        dest: /etc/cobbler/modules.conf.orig
      become: yes
      become_method: sudo

    - name: "Configure Cobbler to use dnsmasq for DHCP and DNS services"
      replace:
        dest: /etc/cobbler/modules.conf
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
      with_items:
        - { regexp: 'module = manage_bind', line: 'module = manage_dnsmasq' }
        - { regexp: 'module = manage_isc', line: 'module = manage_dnsmasq' }
      become: yes
      become_method: sudo

    - name: "Copy cobbler.conf into apache2/conf-available"
      copy:
        remote_src: True
        src: /etc/cobbler/cobbler.conf
        dest: /etc/apache2/conf-available/cobbler.conf
      become: yes
      become_method: sudo

    - name: "Copy cobbler_web.conf into apache2/conf-available"
      copy:
        remote_src: True
        src: /etc/cobbler/cobbler_web.conf
        dest: /etc/apache2/conf-available/cobbler_web.conf
      become: yes
      become_method: sudo

    - name: "Enable cobbler & cobbler_web apache2 configuration"
      command: /usr/sbin/a2enconf cobbler cobbler_web
      become: yes
      become_method: sudo

    - name: "Enable proxy apache2 configuration"
      command: /usr/sbin/a2enmod proxy
      become: yes
      become_method: sudo

    - name: "Enable proxy_http apache2 configuration"
      command: /usr/sbin/a2enmod proxy_http
      become: yes
      become_method: sudo

    - name: "Save original /usr/local/share/cobbler/web/settings.py file"
      copy:
        remote_src: True
        src: /usr/local/share/cobbler/web/settings.py
        dest: /usr/local/share/cobbler/web/settings.py.orig
      become: yes
      become_method: sudo

    - name: "Generate 100 random characters to use as secret key in /usr/local/share/cobbler/web/settings.py"
      command: python -c 'import re;from random import choice; import sys; sys.stdout.write(re.escape("".join([choice("abcdefghijklmnopqrstuvwxyz0123456789^&*(-_=+)") for i in range(100)])))'
      register: SECRET_KEY

    - name: "Set secret key in /usr/local/share/cobbler/web/settings.py"
      replace:
        dest: /usr/local/share/cobbler/web/settings.py
        regexp: "^SECRET_KEY = .*"
        replace: "SECRET_KEY = '{{ SECRET_KEY.stdout }}'"
      become: yes
      become_method: sudo

    - name: "Save original /etc/apache2/conf-enabled/cobbler.conf file"
      copy:
        remote_src: True
        src: /etc/apache2/conf-enabled/cobbler.conf
        dest: /etc/apache2/conf-enabled/cobbler.conf.orig
      become: yes
      become_method: sudo

    - name: "Save original /etc/apache2/conf-enabled/cobbler_web.conf file"
      copy:
        remote_src: True
        src: /etc/apache2/conf-enabled/cobbler_web.conf
        dest: /etc/apache2/conf-enabled/cobbler_web.conf.orig
      become: yes
      become_method: sudo

    - name: "Apache2 config"
      lineinfile:
        dest: "{{ item }}"
        regexp: "Order allow,deny"
        state: absent
      with_items:
        - /etc/apache2/conf-enabled/cobbler.conf
        - /etc/apache2/conf-enabled/cobbler_web.conf
      become: yes
      become_method: sudo

    - name: "Apache2 config"
      replace:
        dest: "{{ item }}"
        regexp: "Allow from all"
        replace: "Require all granted"
      with_items:
        - /etc/apache2/conf-enabled/cobbler.conf
        - /etc/apache2/conf-enabled/cobbler_web.conf
      become: yes
      become_method: sudo

    - file:
        path: /var/lib/cobbler/webui_sessions
        owner: www-data
      become: yes
      become_method: sudo

    - name: "Save original /etc/cobbler/settings file"
      copy:
        remote_src: True
        src: /etc/cobbler/settings
        dest: /etc/cobbler/settings.orig
      become: yes
      become_method: sudo

    - replace:
        dest: /etc/cobbler/settings
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
      with_items:
        - { regexp: '127.0.0.1', line: "{{ container_mgmt_ipv4 | ipaddr('address') }}" }
        - { regexp: 'manage_dhcp: 0', line: 'manage_dhcp: 1' }
        - { regexp: 'manage_dns: 0', line: 'manage_dns: 1' }
        - { regexp: 'pxe_just_once: 0', line: 'pxe_just_once: 1' }
      become: yes
      become_method: sudo

    - name: "Save original /etc/cobbler/pxe/pxedefault.template file"
      copy:
        remote_src: True
        src: /etc/cobbler/pxe/pxedefault.template
        dest: /etc/cobbler/pxe/pxedefault.template.orig
      become: yes
      become_method: sudo

    - name: "Set PXE timeout to maximum"
      replace:
        dest: /etc/cobbler/pxe/pxedefault.template
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      with_items:
        - { regexp: 'TIMEOUT \d+', replace: 'TIMEOUT 35996' }
        - { regexp: 'TOTALTIMEOUT \d+', replace: 'TOTALTIMEOUT 35996' }
      become: yes
      become_method: sudo

    - name: "Save original /var/lib/cobbler/snippets/kickstart_done file"
      copy:
        remote_src: True
        src: /var/lib/cobbler/snippets/kickstart_done
        dest: /var/lib/cobbler/snippets/kickstart_done.orig
      become: yes
      become_method: sudo

    - name: "Fix line break escape in kickstart_done snippet"
      replace:
        dest: /var/lib/cobbler/snippets/kickstart_done
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
      with_items:
        - { regexp: 'set nopxe = \"\\nwget', line: 'set nopxe = "\\\\\\nwget' }
        - { regexp: 'set saveks = \"\\nwget', line: 'set saveks = "\\\\\\nwget' }
        - { regexp: 'set runpost = \"\\nwget', line: 'set runpost = "\\\\\\nwget' }
        - { regexp: 'null', line: 'null;' }
        - { regexp: 'cobbler.ks', line: 'cobbler.ks;' }
        - { regexp: 'cobbler.seed', line: 'cobbler.seed;' }
      become: yes
      become_method: sudo

    - name: "Copy authorized_keys ssh key file to web repo directory"
      copy:
        src: "/home/deployer/.ssh/authorized_keys"
        remote_src: True
        dest: "/var/www/html/authorized_keys"
      become: yes
      become_method: sudo

    - name: "Restart cobblerd service"
      service:
        name: cobblerd
        state: restarted
      become: yes
      become_method: sudo

    - name: "Restart apache2 service"
      service:
        name: apache2
        state: restarted
      become: yes
      become_method: sudo

    - name: "Update boot-loader files"
      command: /usr/local/bin/cobbler get-loaders
      become: yes
      become_method: sudo

    - name: "Update cobbler list of OS signatures"
      command: /usr/local/bin/cobbler signature update
      become: yes
      become_method: sudo

    - name: "Run cobbler sync"
      command: /usr/local/bin/cobbler sync
      become: yes
      become_method: sudo

    - name: "Restart cobblerd service (again)"
      service:
        name: cobblerd
        state: restarted
      become: yes
      become_method: sudo

    - name: "Restart apache2 service (again)"
      service:
        name: apache2
        state: restarted
      become: yes
      become_method: sudo

    - name: "Restart dnsmasq service"
      service:
        name: dnsmasq
        state: restarted
      become: yes
      become_method: sudo

    - name: "Set cobblerd service to start on boot"
      service:
        name: cobblerd
        enabled: yes
      become: yes
      become_method: sudo
